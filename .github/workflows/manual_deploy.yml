name: manual deploy
run-name: Deploy to ${{ inputs.service }} on ${{ github.ref_name }} branch by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      service:
        description: 'service name'
        required: true
        default: 'harrods'
        type: choice
        options:
          - harrods
          - stat

# 모든 변수 선언
env:
  AWS_REGION: ap-northeast-2
  S3_DEPLOY_BASE_PATH: s3://musinsa-server-build/dataplatform

jobs:
  setup_environment:
    name: setup environment
    runs-on: ubuntu-22.04
    outputs:
      service: ${{ steps.vars.outputs.service }}
      profile: ${{ steps.vars.outputs.profile }}
      build_file: ${{ steps.vars.outputs.build_file }}
      build_file_path_s3: ${{ steps.vars.outputs.build_file_path_s3 }}
      build_file_path_local: ${{ steps.vars.outputs.build_file_path_local }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: vars
        name: Set variables
        run: |
          service="${{ inputs.service }}"
          profile="${{ github.ref_name }}"
          build_file="${service}.tar"
          
          echo "service=$service" >> $GITHUB_ENV
          echo "profile=$profile" >> $GITHUB_ENV
          echo "build_file=$service.tar"  >> $GITHUB_ENV
          echo "build_file_path_local=$service/build/libs"  >> $GITHUB_ENV
          echo "build_file_path_s3=${{ env.S3_DEPLOY_BASE_PATH }}/$service/$profile/$build_file"  >> $GITHUB_ENV

      - name: Print variables
        run: |
          echo service: ${{ env.service }}
          echo profile: ${{ env.profile }}
          echo build_file: ${{ env.build_file }}
          echo build_file_path_s3: ${{ env.build_file_path_s3 }}
          echo build_file_path_local: ${{ env.build_file_path_local }}

      - name: Check variables
        run: |
          echo "check if service module exist"

          if [ -d "${{ env.service }}" ]; then
            echo "Service ${{ env.service }} exist"
          else
            echo "Unsupported service: ${{ env.service }}"
            exit 1
          fi

  build:
    name: build service
    runs-on: ubuntu-22.04
    needs: [ setup_environment ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

#      - name: Install JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: 17
#          cache: 'gradle'

#      - name: Install Kotlin
#        run: sudo snap install --classic kotlin --channel=1.7

#      - name: Build
#        run: ./gradlew :${{ env.service }}:build
#
#      - name: Check build file
#        run: |
#          echo "Check if build file exist"
#          if [ -e ${{ env.build_file_path_local }}/${{ env.build_file }} ]; then
#            echo "${{ env.build_file }} exist"
#          else
#            echo "${{ env.build_file }} does not exist"
#            exit 1
#          fi
#
#  deploy:
#    name: deploy service
#    runs-on: ubuntu-22.04
#    needs: [ build ]
#    steps:
#      - name: Compress tar
#        run: tar -cvf ${{ env.build_file }} -C ./${{ env.build_file_path_local }} .
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Upload to S3
#        run: aws s3 cp --region ${{ env.AWS_REGION }} ${{ env.build_file }} ${{ env.build_file_path }}
#
  post:
    name: do post action
    runs-on: ubuntu-22.04
    needs: [ build ]
    steps:
      - name: Send result to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: ${{ env.service }}_build
          author_name: ${{ env.service }}_build_bot
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                },
                {
                    "type": "section",
                    "text": {
                        "type": "mrkdwn",
                        "text": "Service: ${{ env.service }}\nBranch: ${{ github.ref_name }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          SERVICE: ${{ env.service }}